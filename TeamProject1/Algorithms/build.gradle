buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    // https://github.com/sherter/google-java-format-gradle-plugin
    classpath "gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.8"
  }
}


plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'
  id 'java'
  id 'idea' // optional (to generate IntelliJ IDEA project files)
  //id 'com.github.sherter.google-java-format' version '0.9'
}

// Java target version
sourceCompatibility = 13

repositories {
  // Use Maven Central for resolving dependencies.
  mavenLocal()
  mavenCentral()
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
//  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:4.12.0-M4'



//
//  // This dependency is used by the application.
//  implementation 'com.google.guava:guava:30.1.1-jre'
  // Apache commons lang
  testImplementation 'org.apache.commons:commons-lang3:3.12.0'

  // Google Truth test framework
  testImplementation group: 'com.google.truth', name: 'truth', version: '1.0'
//  // Test mocking framework
//  testImplementation 'org.mockito:mockito-core:3.12.4'
}

mainClassName = findProperty("main") ?: "com.gsd.algorithms.${findProperty("algorithm") ?: 'missingPackage.missingClass'}"

//tasks.named('test') {
//  // Use JUnit Platform for unit tests.
//  useJUnitPlatform()
//}

test {
  // Enable JUnit 5 (Gradle 4.6+).
  useJUnitPlatform()

  // show standard out and standard error of the test JVM(s) on the console
  testLogging.showStandardStreams = true
  // Always run tests, even when nothing changed.
  dependsOn 'cleanTest'
  // Show test results.
  testLogging {
    events "passed", "skipped", "failed"
  }
}


//tasks.withType(JavaCompile) {
//  options.encoding = 'UTF-8'
//  options.compilerArgs += [
//          '-Xlint:unchecked',
//          '-Xlint:deprecation'
//  ]
//}

//task buildDependenciesFolder(type: Copy) {
//  from configurations.compile
//  into './dependencies'
//}

//// Options when compiling tests
//compileTestJava {
//  options.encoding = 'UTF-8'
//  options.compilerArgs += [
//    '-Xlint:unchecked',
//    '-Xlint:deprecation'
//  ]
//}

wrapper {
  description = 'Generates gradlew[.bat] scripts'
  gradleVersion = '7.2'
}
